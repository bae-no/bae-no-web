name: lighthouse-ci
on: [push]
jobs:
  lhci:
    name: Lighthouse
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7

      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: pnpm

      - name: Get npm cache directory
        id: pnpm-cache-dir
        run: |
          echo "::set-output name=dir::$(pnpm config get cache)"

      - uses: actions/cache@v3
        id: pnpm-cache
        with:
          path: ${{ steps.pnpm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: npm install, build
        run: |
          pnpm install --frozen-lockfile
          pnpm build
      - name: run Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.8.x
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      - name: Format lighthouse score
        id: format_lighthouse_score
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |

            const fs = require('fs');

            const results = JSON.parse(fs.readFileSync("./lhci_reports/manifest.json"));

            let comments = "";

            results.forEach((result) => {
              const { summary, jsonPath } = result;

              const details = JSON.parse(fs.readFileSync(jsonPath));

              const { audits } = details;

              const score = (res) => (res >= 90 ? "üü¢" : res >= 50 ? "üü†" : "üî¥");

              const formatResult = (result) => result * 100;

              const createSummaryInfo = (field) => {
                const value = formatResult(summary[field]);
                return `| ${score(value)} ${field} | ${value} |`;
              };

              const createAuditsInfo = (field) => {
                const target = audits[field];
                const value = formatResult(target.score);
                return `| ${score(value)} ${field} | ${target.displayValue} |`;
              };

              const comment = [
                `‚ö°Ô∏è Lighthouse report!`,
                `| Category | Score |`,
                `| --- | --- |`,
                createSummaryInfo("performance"),
                createSummaryInfo("accessibility"),
                createSummaryInfo("best-practices"),
                createSummaryInfo("seo"),
              ].join("\n");

              const detail = [
                `| Category | Score |`,
                `| --- | --- |`,
                createAuditsInfo("first-contentful-paint"),
                createAuditsInfo("largest-contentful-paint"),
                createAuditsInfo("first-meaningful-paint"),
                createAuditsInfo("total-blocking-time"),
                createAuditsInfo("cumulative-layout-shift"),
                createAuditsInfo("interactive"),
              ].join("\n");
              comments += comment + "\n\n" + detail + "\n\n";
            });

            core.setOutput('comments', comments)

      - name: comment PR
        uses: unsplash/comment-on-pr@v1.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: ${{ steps.format_lighthouse_score.outputs.comments}}
          check_for_duplicate_msg: false
